#
# Copyright (c) 2012-2014 CESNET, z.s.p.o.
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#

NAME = @PACKAGE_NAME@
LNCTOOL = lnctool/lnctool

# Various configurable paths (remember to edit Makefile.in, not Makefile)
srcdir = @srcdir@
abs_srcdir = @abs_srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
datadir = @datadir@
bindir = @bindir@
includedir = @includedir@
libdir =  @libdir@
mandir = @mandir@
readlink = @READLINK@
libtool = @libtool@

VERSION = $(shell cut -f1 "$(srcdir)/VERSION" | tr -d '\n')
# version for soname:
ABICOMPAT_VER = $(shell echo $(VERSION) | cut -d. -f1,2)
RELEASE = @RELEASE@
# libtool version info
version_info = @LIBTOOL_VERSION_INFO@

CC = @CC@
DOXYGEN = @DOXYGEN@
DOXYGEN_CONFIG = Doxyfile
DOXYGEN_DIR = $(shell cat $(DOXYGEN_CONFIG) | grep '^OUTPUT_DIRECTORY' | sed 's/.*= *//')
RPMBUILD = @RPMBUILD@
LDCONFIG = ldconfig
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
RPMDIR = RPMBUILD
NC_WORKINGDIR_PATH = @NC_WORKINGDIR_PATH@
SETBIT = @SETBIT@
SETUSER = @SETUSER@
SETGROUP = @SETGROUP@
IDGIT = "built from git $(shell git show --pretty=oneline | head -1 | cut -c -20)"
IDNOGIT = "released as version $(VERSION)"
LIBS = @LDFLAGS@ @LIBS@
CFLAGS = -Wall @CFLAGS@
CPPFLAGS = -DNC_WORKINGDIR_PATH=\"$(NC_WORKINGDIR_PATH)\" -DSETBIT=$(SETBIT) @CPPFLAGS@
LIBTOOL = $(libtool) --tag=CC --quiet

INCLUDES= -I$(abs_srcdir) -I$(abs_srcdir)/src -I$(abs_srcdir)/models -I$(abs_srcdir)/src/transapi -I$(abs_srcdir)/src/datastore

ifeq "$(shell pwd)" "$(shell $(readlink) -f $(srcdir))"
OBJDIR = .obj
else
OBJDIR = .
VPATH = $(srcdir)
endif

SRCS =  src/callbacks.c \
	src/error.c \
	src/internal.c \
	src/compat.c \
	src/messages.c \
	src/session.c \
	src/ssh.c @SRCS_NOTIFICATIONS@ \
	src/with_defaults.c @SRCS_URL@ \
	src/nacm.c \
	src/datastore.c \
	src/datastore/edit_config.c \
	src/datastore/empty/datastore_empty.c \
	src/datastore/file/datastore_file.c \
	src/datastore/custom/datastore_custom.c \
	src/transapi/transapi.c \
	src/transapi/yinparser.c \
	src/transapi/xmldiff.c

HDRS_PUBL_ROOT = headers/libnetconf_ssh.h

HDRS_PUBL_GEN = headers/libnetconf.h \
		headers/libnetconf_xml.h


HDRS_PUBL_SUBDIR = src/netconf.h \
	src/callbacks.h \
	src/callbacks_ssh.h \
	src/error.h \
	src/session.h \
	src/messages.h \
	src/messages_xml.h \
	src/ssh.h @HDRS_PUBL_SUBDIR_NOTIFICATIONS@ \
	src/with_defaults.h @HDRS_PUBL_SUBDIR_URL@ \
	src/datastore.h \
	src/datastore_xml.h \
	src/datastore/custom/datastore_custom.h \
	src/transapi.h
		
HDRS_PUBL = $(HDRS_PUBL_GEN) $(HDRS_PUBL_ROOT) $(HDRS_PUBL_SUBDIR)
SUBHEADERS_DIR = libnetconf

HDRS_PRIV = src/config.h.in \
	src/libnetconf.h \
	src/libnetconf_xml.h \
	src/libnetconf_ssh.h \
	src/callbacks.h \
	src/callbacks_ssh.h \
	src/error.h \
	src/messages.h \
	src/messages_internal.h \
	src/messages_xml.h \
	src/netconf.h \
	src/netconf_internal.h \
	src/session.h \
	src/ssh.h @HDRS_PRIV_NOTIFICATIONS@ \
	src/with_defaults.h @HDRS_PRIV_URL@ \
	src/nacm.h \
	src/datastore.h \
	src/datastore/datastore_internal.h \
	src/datastore/edit_config.h \
	src/datastore/empty/datastore_empty.h \
	src/datastore/file/datastore_file.h \
	src/datastore/custom/datastore_custom.h \
	src/datastore/custom/datastore_custom_private.h \
	src/transapi/transapi_internal.h \
	src/transapi/yinparser.h \
	src/transapi/xmldiff.h

GENERATOR_FILES = lnctool/generator/Makefile.in \
	lnctool/generator/configure.in \
	lnctool/generator/install-sh \
	lnctool/generator/config.guess \
	lnctool/generator/config.sub \
	lnctool/generator/ltmain.sh \
	lnctool/generator/README

XML_SRCS = models/ietf-netconf-acm-data.rng.in

BUILT_RNGS = $(XML_SRCS:models/%.rng.in=models/%.rng)

models/%.rng: models/%.rng.in
	@mkdir -p models
	@sed -e "s/\@DATAROOTDIR\@/$(subst /,\/,$(datarootdir))/g" $< > $@

LOBJS = $(SRCS:%.c=$(OBJDIR)/%.lo)

all: $(LNCTOOL) $(NAME).la $(BUILT_RNGS)

$(NAME).la: $(LOBJS)
	@rm -f $@
	$(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS) $(LIBS) -version-number $(version_info) -no-undefined -o $@ $^ -rpath $(libdir)

$(LNCTOOL): $(LNCTOOL).in
	@mkdir -p lnctool
	@sed "s/@RNGLIB@/$(subst /,\/,$(DESTDIR)/$(datadir)/$(NAME)/rnglib/)/g" $< | \
	 sed 's/@XSLTDIR@/$(subst /,\/,$(DESTDIR)/$(datadir)/$(NAME)/xslt/)/g' | \
	 sed 's/@TEMPLATEDIR@/$(subst /,\/,$(DESTDIR)/$(datadir)/$(NAME)/templates/)/g' > $(LNCTOOL).install
	@sed "s/@RNGLIB@/$(subst /,\/,$(abs_srcdir)/lnctool/rnglib/)/g" $< | \
	 sed 's/@XSLTDIR@/$(subst /,\/,$(abs_srcdir)/lnctool/xslt/)/g' | \
	 sed 's/@TEMPLATEDIR@/$(subst /,\/,$(abs_srcdir)/lnctool/generator/)/g' > $(LNCTOOL)
	@chmod +x $(LNCTOOL) $(LNCTOOL).install

$(OBJDIR)/%.lo: %.c
	@[ -d $$(dirname $@) ] || \
		(mkdir -p $$(dirname $@))
	$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(DBG) -fPIC -c $< -o $@

.PHONY: doc
doc: $(DOXYGEN_CONFIG) $(HDRS_PRIV)
	@if [ "$(DOXYGEN)" != "no" ]; then \
		[ -d $(DOXYGEN_DIR) ] || mkdir -p $(DOXYGEN_DIR); \
		$(DOXYGEN); \
	else \
		echo "Missing doxygen!"; \
	fi;

.PHONY: dist
dist: $(NAME).spec tarball rpm

.PHONY: tarball
tarball: $(SRCS) $(HEADERS)
	@rm -rf $(NAME)-$(VERSION);
	@mkdir $(NAME)-$(VERSION);
	for i in $(SRCS) $(HDRS_PUBL) $(HDRS_PRIV) configure.in configure \
	    headers/libnetconf.h.in headers/libnetconf_xml.h.in \
	    ltmain.sh Makefile.in VERSION $(NAME).spec.in $(NAME).pc.in \
	    lnctool/lnctool.in lnctool/rnglib/* lnctool/xslt/*  lnctool/generator/*\
	    install-sh config.sub config.guess Doxyfile.in doc/img/*.png models/*; do \
	    [ -d $(NAME)-$(VERSION)/$$(dirname $$i) ] || (mkdir -p $(NAME)-$(VERSION)/$$(dirname $$i)); \
		cp $$i $(NAME)-$(VERSION)/$$i; \
	done; \
	@rm -rf $(RPMDIR)/SOURCES/; \
	mkdir -p $(RPMDIR)/SOURCES/; \
	tar -c -z -f $(RPMDIR)/SOURCES/$(NAME)-$(VERSION)-$(RELEASE).tar.gz \
	    $(NAME)-$(VERSION); \
	rm -rf $(NAME)-$(VERSION);

.PHONY: rpm
rpm: tarball
	if [ "$(RPMBUILD)" != "no" ]; then \
		mkdir -p $(RPMDIR)/BUILD $(RPMDIR)/RPMS $(RPMDIR)/SRPMS; \
		$(RPMBUILD) -ba $(NAME).spec \
			--define "_topdir `pwd`/$(RPMDIR)"; \
	else \
		echo "Missing rpmbuild"; \
		exit 1; \
	fi

.PHONY: install
install: all install-devel install-doc
	$(INSTALL) -m 775 -d $(DESTDIR)/$(libdir)
	$(LIBTOOL) --mode=install cp $(NAME).la $(DESTDIR)/$(libdir)
	$(LIBTOOL) --mode=finish $(DESTDIR)/$(libdir)
	[ -d "$(DESTDIR)/$(NC_WORKINGDIR_PATH)" ] || \
		mkdir -p $(DESTDIR)/$(NC_WORKINGDIR_PATH)
	chmod 700 $(DESTDIR)/$(NC_WORKINGDIR_PATH)
	$(INSTALL_DATA) models/ietf-netconf-acm*.rng $(srcdir)/models/ietf-netconf-acm-schematron.xsl $(DESTDIR)/$(NC_WORKINGDIR_PATH)/
	$(INSTALL_DATA) $(srcdir)/models/yin2yang.xsl $(DESTDIR)/$(NC_WORKINGDIR_PATH)/
	if test "$$(($(SETBIT) & 1))" = "1"; then \
		if test -n "$(SETUSER)"; then \
			chown $(SETUSER) $(DESTDIR)/$(NC_WORKINGDIR_PATH) || \
				echo "WARNING: invalid group $(SETUSER)"; \
		fi; \
	fi; \
	if test "$$(($(SETBIT) & 2))" = "2"; then \
		chmod g+rwx $(DESTDIR)/$(NC_WORKINGDIR_PATH); \
		if test -n "$(SETGROUP)"; then \
			chown :$(SETGROUP) $(DESTDIR)/$(NC_WORKINGDIR_PATH) || \
				echo "WARNING: invalid group $(SETGROUP)"; \
		fi; \
	fi; \
	if test "$(SETBIT)" = "0"; then \
		chmod a+rwx $(DESTDIR)/$(NC_WORKINGDIR_PATH); \
	fi;
	# remove sessions monitoring file, we changed its format and it must be replaced
	rm -rf $(DESTDIR)/$(NC_WORKINGDIR_PATH)/libnetconf_sessions.bin

.PHONY: install-devel
install-devel:
	@[ -d $(DESTDIR)/$(libdir) ] || \
	    (mkdir -p $(DESTDIR)/$(libdir); chmod 755 $(DESTDIR)/$(libdir)); \
	[ -d $(DESTDIR)/$(bindir) ] || \
	    (mkdir -p $(DESTDIR)/$(bindir); chmod 755 $(DESTDIR)/$(bindir)); \
	[ -d $(DESTDIR)/$(libdir)/pkgconfig ] || \
	    (mkdir -p $(DESTDIR)/$(libdir)/pkgconfig; chmod 755 $(DESTDIR)/$(libdir)/pkgconfig); \
	[ -d $(DESTDIR)/$(includedir) ] || \
	    (mkdir -p $(DESTDIR)/$(includedir); chmod 755 $(DESTDIR)/$(includedir)); \
	[ -d $(DESTDIR)/$(includedir)/$(SUBHEADERS_DIR) ] || \
		(mkdir -p $(DESTDIR)/$(includedir)/$(SUBHEADERS_DIR)); \
	[ -d $(DESTDIR)/$(datadir)/$(NAME)/rnglib ] || \
		(mkdir -p $(DESTDIR)/$(datadir)/$(NAME)/rnglib); \
	[ -d $(DESTDIR)/$(datadir)/$(NAME)/xslt ] || \
		(mkdir -p $(DESTDIR)/$(datadir)/$(NAME)/xslt);
	[ -d $(DESTDIR)/$(datadir)/$(NAME)/templates ] || \
		(mkdir -p $(DESTDIR)/$(datadir)/$(NAME)/templates);
	$(LIBTOOL) --mode=install cp $(NAME).la $(DESTDIR)/$(libdir); \
	for i in $(HDRS_PUBL_GEN); do \
		$(INSTALL_DATA) $(OBJDIR)/$$i $(DESTDIR)/$(includedir)/$$(basename $$i); \
	done; \
	for i in $(HDRS_PUBL_ROOT); do \
		$(INSTALL_DATA) $(srcdir)/$$i $(DESTDIR)/$(includedir)/$$(basename $$i); \
	done; \
	for i in $(HDRS_PUBL_SUBDIR); do \
		$(INSTALL_DATA) $(srcdir)/$$i $(DESTDIR)/$(includedir)/$(SUBHEADERS_DIR)/$$(basename $$i); \
	done;
	$(INSTALL_DATA) $(NAME).pc $(DESTDIR)/$(libdir)/pkgconfig/$(NAME).pc;
	$(INSTALL_PROGRAM) $(LNCTOOL).install $(DESTDIR)/$(bindir)/lnctool;
	$(INSTALL_DATA) $(srcdir)/lnctool/rnglib/* $(DESTDIR)/$(datadir)/$(NAME)/rnglib/;
	$(INSTALL_DATA) $(srcdir)/lnctool/xslt/* $(DESTDIR)/$(datadir)/$(NAME)/xslt/;
	$(INSTALL_DATA) $(srcdir)/lnctool/generator/* $(DESTDIR)/$(datadir)/$(NAME)/templates/;

.PHONY: install-doc
install-doc:
	[ -d $(DESTDIR)/$(datadir)/$(NAME)/doxygen ] || \
		(mkdir -p $(DESTDIR)/$(datadir)/$(NAME)/doxygen; \
		chmod -R 755 $(DESTDIR)/$(datadir)/$(NAME))
	cp -r $(srcdir)/$(DOXYGEN_DIR)/* $(DESTDIR)/$(datadir)/$(NAME)/doxygen/;

.PHONY: uninstall
uninstall: uninstall-devel uninstall-doc
	$(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)/$(libdir)/libnetconf.la
	[ ! -d $(DESTDIR)/$(libdir) ] || rmdir -p $(DESTDIR)/$(libdir) || echo "Directory already gone."
	rm $(NC_WORKINGDIR_PATH)/ietf-netconf-acm*.rng $(NC_WORKINGDIR_PATH)/ietf-netconf-acm-schematron.xsl;

.PHONY: uninstall-devel
uninstall-devel:
	$(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)/$(libdir)/libnetconf.la \
	[ ! -d $(DESTDIR)/$(libdir) ] || rmdir -p $(DESTDIR)/$(libdir) || echo "Directory already gone."
	for i in $(HDRS_PUBL_ROOT); do \
		rm -f $(DESTDIR)/$(includedir)/$$(basename $$i); \
	done; \
	for i in $(HDRS_PUBL_GEN); do \
		rm -f $(DESTDIR)/$(includedir)/$$(basename $$i); \
	done; \
	for i in $(HDRS_PUBL_SUBDIR); do \
		rm -f $(DESTDIR)/$(includedir)/$(SUBHEADERS_DIR)/$$(basename $$i); \
	done; \
	rm $(DESTDIR)/$(libdir)/pkgconfig/$(NAME).pc; \
	rm $(DESTDIR)/$(bindir)/lnctool; \
	rm -rf $(DESTDIR)/$(datadir)/$(NAME)/rnglib/; \
	rm -rf $(DESTDIR)/$(datadir)/$(NAME)/xslt/;

.PHONY: uninstall-doc
uninstall-doc:
	rm -rf $(DESTDIR)/$(datadir)/$(NAME)/doxygen;

.PHONY: clean clean-all clean-doc clean-rpm
clean:
	rm -rf *.a *.so* .obj $(OBJS) $(BUILT_RNGS)
	$(LIBTOOL) --mode clean rm -f $(LOBJS)
	$(LIBTOOL) --mode clean rm -f $(NAME).la

clean-all: clean clean-doc clean-rpm

clean-doc:
	rm -rf $(DOXYGEN_DIR);

clean-rpm:
	rm -rf $(RPMDIR)
