#! /bin/bash

# 
# (c) Copyright RIFT.io, 2013-2016, All Rights Reserved
#
# 

# This script is used for installing openstack
# using devstack on a grunt machine.
# This script should be run as regular user.
# At high level this script does the following:
# - Copies the OpenStack repository
# - Run the devstack install scripts as root using the ssh_root script

set -e

function print_usage() {
    echo "Usage: $0 [-h HOST_IP] [-p PUBLIC_INTERFACE] [-f FLAT_INTERFACE] [-t FLOATING_RANGE] "
    echo "       Mandatory arguments"
    echo "       -h|--host-ip HOST_IP"
    echo "       Mandatory arguments during installation when enabling Neutron"
    echo "       -t|--floating-range FLOATING_RANGE"
    echo "       Mandatory arguments for cmpute node installation"
    echo "       -c|--controller-ip CONTROLLER_IP"
    echo "       Optional arguments"
    echo "       -p|--public-interface PUBLIC_INTERFACE"
    echo "       -f|--flat-interafce FLAT_INTERFACE"
    echo "       -u|--unstack Uninstall openstack"
    echo "       -j|--rejoin Rejoin openstack"
echo "       -v|--vlan-range VLAN_RANGE -- colon separated list of start and end VLAN IDs, e.g. 1:10"
    exit 1
}

CURR_DIR=`pwd`
SSH_ROOT=/usr/rift/bin/ssh_root


##
# Set defaults
##
PUBLIC_INTERFACE=eth0
FLAT_INTERFACE=eth1
FIXED_NETWORK_SIZE=256
#FLOATING_RANGE=10.66.132.0/24
MULTI_HOST=1
UNSTACK=false
REJOIN=false
LEGACY=false
#FLOATING_ADDR_START=10.66.132.100
#FLOATING_ADDR_END=10.66.132.150
#PUBLIC_NETWORK_GATEWAY=10.66.132.99
CONTROLLER_IP=""
CONTROLLER_IP_SET=false
NEUTRON_ENABLED=true

##
# Parse options
##
while [[ $# > 0 ]]
do
key="$1"
shift
case $key in
    -h|--host-ip)
    HOST_IP=$1
    shift
    ;;
    -r|--repo-path)
    RIFTSTACK_DIR=$1
    shift
    ;;
    -p|--public-interface)
    PUBLIC_INTERFACE=$1
    shift
    ;;
    -f|--flat-interface)
    FLAT_INTERFACE=$1
    shift
    ;;
    -t|--floating-range)
    FLOATING_RANGE=$1
    shift
    ;;
    -u|--unstack)
    UNSTACK=true
    ;;
    -j|--rejoin)
    REJOIN=true
    ;;
    -n|--neutron)
    NEUTRON_ENABLED=true
    PUBLIC_NETWORK_GATEWAY=$1
    FLOATING_ADDR_START=$2
    FLOATING_ADDR_END=$3
    shift
    shift
    shift
    ;;
    -c|--controller-ip)
    CONTROLLER_IP=$1
    CONTROLLER_IP_SET=true
    shift
    ;;
    -v|--vlan-range)
    VLAN_RANGE=$1
    shift
    ;;
    *)
    print_usage
    ;;
esac
done

if [[ "$HOST_IP" == "" ]]; then
    echo "Must specify the host ip address using -h option"
    print_usage
fi

if [[ "$HOST_IP" =~ ^[0-9.]+$ ]]; then
    echo using IP $HOST_IP
else
    echo "MUST specify the host IP"
    print_usage
fi

if [[ "$CONTROLLER_IP" == "" ]]; then
    # if the controller ip is not explicitly specified, 
    # the current install is for controller node
    CONTROLLER_IP=$HOST_IP
fi

 
HOSTNAME=`hostname`
GRUNT_SHORTNAME=`hostname -s`
GRUNT_ID=$(echo $GRUNT_SHORTNAME | sed 's/grunt//')
FLOATING_ID=$(( GRUNT_ID + 100 ))
FLOATING_RANGE=10.66.${FLOATING_ID}.0/24
FLOATING_ADDR_START=10.66.${FLOATING_ID}.100
FLOATING_ADDR_END=10.66.${FLOATING_ID}.150
PUBLIC_NETWORK_GATEWAY=10.66.${FLOATING_ID}.99
CONTROLLER_HOSTNAME=`$SSH_ROOT $CONTROLLER_IP "hostname -s"`
if [ $CONTROLLER_HOSTNAME == "tapti" ]; then
	CURR_GRUNT=1
else
	CURR_GRUNT=`expr "$CONTROLLER_HOSTNAME" : 'grunt\([0-9]*\).*'`
fi
FIXED_RANGE=10.0.$CURR_GRUNT.0/24
FIXED_NETWORK_SIZE=256
NETWORK_GATEWAY=10.0.$CURR_GRUNT.1

VLAN_RANGE=${VLAN_RANGE:=1:10}


#if [[ "`hostname -s`" =~ grunt ]]; then
#	if [ $HOSTNAME != "`hostname`" ]; then
#		echo "running this script on one grunt against another grunt is not allowed"
#		exit 1
#	fi
#fi


if $UNSTACK; then
    # Uninstall openstack
    su - stack -c 'cd devstack && ./unstack.sh'
    su - stack -c 'cd devstack && ./clean.sh'

elif $REJOIN; then
    # Rejoin the stack after the reboot
    vgs stack-volumes
    losetup -f --show /opt/stack/data/stack-volumes-backing-file 
    vgcreate stack-volumes /dev/loop0
    /sbin/service tgtd restart 
    /sbin/service httpd restart
    /sbin/service rabbitmq-server restart
    /sbin/service mysqld start 
    #$SSH_ROOT $HOSTNAME "su - stack -c /home/stack/devstack/rejoin-stack.sh || true"
    su - stack -c /home/stack/devstack/rejoin-stack.sh 

else
    #Check Neutron pre-requisite
    if [[ "$HOST_IP" == "$CONTROLLER_IP" ]]; then
         ifconfig br-ex >/dev/null 
         if [ $? -ne 0 ]; then
              echo "OVS bridge br-ex not found"
              echo "Neutron enable requires that the target host has br-ex OVS bridge configured"    
              echo "and the primary interface added as a port to the bridge"    
              print_usage
         fi
         if ! ifconfig br-ex | grep -q $HOST_IP; then
              echo "HOST IP $HOST_IP does not appear to be associated with bridge br-ex"
              print_usage
         fi
    else

         ifconfig $PUBLIC_INTERFACE >/dev/null 
         if [ $? -ne 0 ]; then
             echo "PUBLIC INTERFACE $PUBLIC_INTERFACE not found"
             print_usage
         fi

         if ! ifconfig $PUBLIC_INTERFACE | grep -q $HOST_IP; then
             echo "HOST IP $HOST_IP does not appear to be associated with PUBLIC_INTERFACE $PUBLIC_INTERFACE"
             print_usage
         fi
    fi	 

    # clone the openstack repository
    if [[ "$RIFTSTACK_DIR" == "" ]]; then
        RIFTSTACK_DIR=/var/tmp/kilo-openstack
    fi

    # Copy the devstack install files to root home directory
    cp $RIFTSTACK_DIR/devstack_preinstall.sh /root/

    # Run the devstack preinstall routines. For this to work properly 
    # "Defaults requiretty" should be commented out in /etc/suoders
    /root/devstack_preinstall.sh $RIFTSTACK_DIR

    ##
    # Create the local.conf file in ~stack/devstack
    ##
    su - stack -c "cat <<EOF > devstack/local.conf
[[local|localrc]]
ADMIN_PASSWORD=mypasswd
MYSQL_PASSWORD=mypasswd 
RABBIT_PASSWORD=mypasswd 
SERVICE_PASSWORD=mypasswd 
SERVICE_TOKEN=mypasswd 
LOG=True 
SCREEN_LOGDIR=/opt/stack/logs/screen 
LOGFILE=/opt/stack/logs/stack.sh.log

HOST_IP=$HOST_IP 
PUBLIC_INTERFACE=$PUBLIC_INTERFACE 
FLAT_INTERFACE=$FLAT_INTERFACE 
FIXED_RANGE=$FIXED_RANGE 
FIXED_NETWORK_SIZE=$FIXED_NETWORK_SIZE 
FLOATING_RANGE=$FLOATING_RANGE
MULTI_HOST=1 
KEYSTONE_ADMIN_BIND_HOST=0.0.0.0 

NETWORK_GATEWAY=$NETWORK_GATEWAY 
PUBLIC_NETWORK_GATEWAY=$PUBLIC_NETWORK_GATEWAY 
Q_FLOATING_ALLOCATION_POOL=start=$FLOATING_ADDR_START,end=$FLOATING_ADDR_END 
ENABLE_TENANT_VLANS=True 
ENABLE_TENANT_TUNNELS=False 
TENANT_VLAN_RANGE=$VLAN_RANGE 
PHYSICAL_NETWORK=physnet1 
OVS_PHYSICAL_BRIDGE=br-$FLAT_INTERFACE 
OFFLINE=True 
Q_USE_SECGROUP=False
LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver

EOF
"
    if $CONTROLLER_IP_SET; then
        su - stack -c "cat <<EOF >> devstack/local.conf
DATABASE_TYPE=mysql 
SERVICE_HOST=$CONTROLLER_IP
MYSQL_HOST=$CONTROLLER_IP 
Q_HOST=$CONTROLLER_IP 
RABBIT_HOST=$CONTROLLER_IP 
GLANCE_HOSTPORT=$CONTROLLER_IP:9292 
VNCSERVER_LISTEN=0.0.0.0 
VNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP 
ENABLED_SERVICES=rabbit 
ENABLED_SERVICES+=,n-cpu,n-novnc,n-cauth,q-agt,neutron 

EOF
"
			     
    else
        su - stack -c "cat <<EOF >> devstack/local.conf
disable_service n-net
enable_service n-cauth 
enable_service q-svc
enable_service q-agt
enable_service q-dhcp 
enable_service q-l3
enable_service q-meta
enable_service neutron
enable_service horizon 
disable_service tempest

EOF
"
    fi

    su - stack -c 'cat <<EOF >> devstack/local.conf
[[post-config|\$NOVA_CONF]]
[DEFAULT]
pci_passthrough_whitelist= { \\\\\"vendor_id\\\\\":\\\\\"8086\\\\\",\\\\\"product_id\\\\\":\\\\\"10fb\\\\\"}
pci_alias={\\\\\"vendor_id\\\\\":\\\\\"8086\\\\\", \\\\\"product_id\\\\\":\\\\\"10fb\\\\\", \\\\\"name\\\\\":\\\\\"PCI_10G_ALIAS\\\\\"}

scheduler_default_filters=AggregateInstanceExtraSpecsFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,AvailabilityZoneFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,PciPassthroughFilter,NUMATopologyFilter

[libvirt]
cpu_mode=host-model

EOF
'
    ip link set $FLAT_INTERFACE promisc on
    rm -f /etc/rc.d/rc.local

    ##
    # Invoke the stack script
    ##
    su - stack -c 'cd devstack && ./stack.sh'

    ovs-vsctl add-port br-$FLAT_INTERFACE $FLAT_INTERFACE

    echo > /etc/motd
    systemctl stop firewalld
    systemctl disable firewalld
    cd /usr/rift/scripts/cloud
    ./enable_lab
    cd /net/boson
    cd /net/boson/home1

fi
